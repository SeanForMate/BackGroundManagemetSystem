<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.znh.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.znh.model.Role">
    <id column="roleId" jdbcType="VARCHAR" property="roleId" />
    <result column="roleName" jdbcType="VARCHAR" property="roleName" />
    <result column="roleRemark" jdbcType="VARCHAR" property="roleRemark" />
    <result column="createDateTime" jdbcType="TIMESTAMP" property="createDateTime" />
    <result column="createPerson" jdbcType="VARCHAR" property="createPerson" />
    <result column="updateDateTime" jdbcType="TIMESTAMP" property="updateDateTime" />
    <result column="updatePerson" jdbcType="VARCHAR" property="updatePerson" />
  </resultMap>
  <sql id="Base_Column_List">
    roleId, roleName, roleRemark, createDateTime, createPerson, updateDateTime, updatePerson
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where roleId = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from role
    where roleId = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.znh.model.Role">
    insert into role (roleId, roleName, roleRemark, 
      createDateTime, createPerson, updateDateTime, 
      updatePerson)
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleRemark,jdbcType=VARCHAR}, 
      #{createDateTime,jdbcType=TIMESTAMP}, #{createPerson,jdbcType=VARCHAR}, #{updateDateTime,jdbcType=TIMESTAMP}, 
      #{updatePerson,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.znh.model.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        roleId,
      </if>
      <if test="roleName != null">
        roleName,
      </if>
      <if test="roleRemark != null">
        roleRemark,
      </if>
      <if test="createDateTime != null">
        createDateTime,
      </if>
      <if test="createPerson != null">
        createPerson,
      </if>
      <if test="updateDateTime != null">
        updateDateTime,
      </if>
      <if test="updatePerson != null">
        updatePerson,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null">
        #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="createDateTime != null">
        #{createDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null">
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDateTime != null">
        #{updateDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null">
        #{updatePerson,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.znh.model.Role">
    update role
    <set>
      <if test="roleName != null">
        roleName = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null">
        roleRemark = #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="createDateTime != null">
        createDateTime = #{createDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createPerson != null">
        createPerson = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDateTime != null">
        updateDateTime = #{updateDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null">
        updatePerson = #{updatePerson,jdbcType=VARCHAR},
      </if>
    </set>
    where roleId = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.znh.model.Role">
    update role
    set roleName = #{roleName,jdbcType=VARCHAR},
      roleRemark = #{roleRemark,jdbcType=VARCHAR},
      createDateTime = #{createDateTime,jdbcType=TIMESTAMP},
      createPerson = #{createPerson,jdbcType=VARCHAR},
      updateDateTime = #{updateDateTime,jdbcType=TIMESTAMP},
      updatePerson = #{updatePerson,jdbcType=VARCHAR}
    where roleId = #{roleId,jdbcType=VARCHAR}
  </update>
</mapper>